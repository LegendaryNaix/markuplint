{
	"tagName": "textarea",
	"citeFrom": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea",
	"attr": [
		"#global",
		{
			"name": "autocapitalize",
			"description": "This is a nonstandard attribute supported by WebKit on iOS (therefore nearly all browsers running on iOS, including Safari, Firefox, and Chrome) which controls whether and how the text value should be automatically capitalized as it is entered/edited by the user. The non-deprecated values are available in iOS 5 and later. Possible values are:\n \n  none: Completely disables automatic capitalization\n  sentences: Automatically capitalize the first letter of sentences.\n  words: Automatically capitalize the first letter of words.\n  characters: Automatically capitalize all characters.\n  on:   Deprecated since iOS 5.\n  off:   Deprecated since iOS 5.\n \n ",
			"obsolete": false
		},
		{
			"name": "autocomplete",
			"description": "This attribute indicates whether the value of the control can be automatically completed by the browser. Possible values are:\n \n  off: The user must explicitly enter a value into this field for every use, or the document provides its own auto-completion method; the browser does not automatically complete the entry.\n  on: The browser can automatically complete the value based on values that the user has entered during previous uses.\n \n\n If the autocomplete attribute is not specified on a <textarea> element, then the browser uses the autocomplete attribute value of the <textarea> element's form owner. The form owner is either the <form> element that this <textarea> element is a descendant of or the form element whose id is specified by the form attribute of the input element. For more information, see the autocomplete attribute in <form>.\n ",
			"obsolete": false
		},
		{
			"name": "autofocus",
			"description": "This Boolean attribute lets you specify that a form control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form-associated element in a document can have this attribute specified.Â ",
			"obsolete": false
		},
		{
			"name": "cols",
			"description": "The visible width of the text control, in average character widths. If it is specified, it must be a positive integer. If it is not specified, the default value is 20 (HTML5).",
			"obsolete": false
		},
		{
			"name": "disabled",
			"description": "This Boolean attribute indicates that the user cannot interact with the control. (If this attribute is not specified, the control inherits its setting from the containing element, for example <fieldset>; if there is no containing element with the disabled attribute set, then the control is enabled.)",
			"obsolete": false
		},
		{
			"name": "form",
			"description": "The form element that the <textarea> element is associated with (its \"form owner\"). The value of the attribute must be the ID of a form element in the same document. If this attribute is not specified, the <textarea> element must be a descendant of a form element. This attribute enables you to place <textarea> elements anywhere within a document, not just as descendants of their form elements.",
			"obsolete": false
		},
		{
			"name": "maxlength",
			"description": "The maximum number of characters (Unicode code points) that the user can enter. If this value isn't specified, the user can enter an unlimited number of characters.",
			"obsolete": false
		},
		{
			"name": "minlength",
			"description": "The minimum number of characters (Unicode code points) required that the user should enter.",
			"obsolete": false
		},
		{
			"name": "name",
			"description": "The name of the control.",
			"obsolete": false
		},
		{
			"name": "placeholder",
			"description": "A hint to the user of what can be entered in the control. Carriage returns or line-feeds within the placeholder text must be treated as line breaks when rendering the hint.",
			"obsolete": false
		},
		{
			"name": "readonly",
			"description": "This Boolean attribute indicates that the user cannot modify the value of the control. Unlike the disabled attribute, the readonly attribute does not prevent the user from clicking or selecting in the control. The value of a read-only control is still submitted with the form.",
			"obsolete": false
		},
		{
			"name": "required",
			"description": "This attribute specifies that the user must fill in a value before submitting a form.",
			"obsolete": false
		},
		{
			"name": "rows",
			"description": "The number of visible text lines for the control.",
			"obsolete": false
		},
		{
			"name": "spellcheck",
			"description": "Setting the value of this attribute to true indicates that the element needs to have its spelling and grammar checked. The value default indicates that the element is to act according to a default behavior, possibly based on the parent element's own spellcheck value. The value false indicates that the element should not be checked.",
			"obsolete": false
		},
		{
			"name": "wrap",
			"description": "Indicates how the control wraps text. Possible values are:\n \n  hard: The browser automatically inserts line breaks (CR+LF) so that each line has no more than the width of the control; the cols attribute must be specified.\n  soft: The browser ensures that all line breaks in the value consist of a CR+LF pair, but does not insert any additional line breaks.\n  off:   Like soft but changes appearance to white-space: pre so line segments exceeding cols are not wrapped and area becomes horizontally scrollable.\n \n\n If this attribute is not specified, soft is its default value.\n ",
			"obsolete": false
		}
	],
	"categories": [
		"#Flow",
		"#phrasing",
		"#Interactive"
	],
	"content": {
		"description": "Text"
	},
	"omission": {
		"description": "None, both the starting and ending tag are mandatory."
	},
	"parents": {
		"description": "Any element that accepts phrasing content."
	},
	"roles": [
		"None"
	]
}