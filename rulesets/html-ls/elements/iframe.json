{
	"attr": [
		"#global",
		{
			"name": "align",
			"description": "The alignment of this element with respect to the surrounding context."
		},
		{
			"name": "allowfullscreen",
			"description": "This attribute can be set to true if the frame is allowed to be placed into full screen mode by calling its Element.requestFullscreen() method. If this isn't set, the element can't be placed into full screen mode."
		},
		{
			"name": "allowpaymentrequest",
			"description": "This attribute can be set to true if the contents of a cross-origin <iframe> should be allowed to invoke the Payment Request API."
		},
		{
			"name": "frameborder",
			"description": "The value 1 (the default) tells the browser to draw a border between this frame and every other frame. The value 0 tells the browser not to draw a border between this frame and other frames."
		},
		{
			"name": "height",
			"description": "Indicates the height of the frame HTML5 in CSS pixels, or HTML 4.01 in pixels or as a percentage."
		},
		{
			"name": "longdesc",
			"description": "A URI of a long description of the frame. Due to widespread misuse, this is not helpful for non-visual browsers."
		},
		{
			"name": "marginheight",
			"description": "The amount of space in pixels between the frame's content and its top and bottom margins."
		},
		{
			"name": "marginwidth",
			"description": "The amount of space in pixels between the frame's content and its left and right margins."
		},
		{
			"name": "mozallowfullscreen",
			"description": "Use allowfullscreen instead. In Gecko 9.0 or later, this attribute can be set to true if the frame is allowed to be placed into full screen mode by calling its element.mozRequestFullScreen() method. If this isn't set, the element can't be placed into full screen mode."
		},
		{
			"name": "webkitallowfullscreen",
			"description": "Use allowfullscreen instead. In Chrome 17 or later (and maybe earlier), this attribute can be set to true if the frame is allowed to be placed into full screen mode by calling its element.webkitRequestFullScreen() method. If this isn't set, the element can't be placed into full screen mode."
		},
		{
			"name": "name",
			"description": "A name for the embedded browsing context (or frame). This can be used as the value of the target attribute of an <a>, <form> or <base> element, or the formtarget attribute of an <input> or <button> element. It can also be used as the value of the windowName parameter in the window.open() method."
		},
		{
			"name": "referrerpolicy",
			"description": "A string indicating which referrer to use when fetching the resource:\n \n  \"no-referrer\" meaning that the Referer: header will not be sent.\n  \"no-referrer-when-downgrade\" meaning that no Referer: header will be sent when navigating to an origin without TLS (HTTPS). This is a user agent’s default behavior, if no policy is otherwise specified.\n  \"origin\" meaning that the referrer will be the origin of the page, that is roughly the scheme, the host and the port.\n  \"origin-when-cross-origin\" meaning that navigations to other origins will be limited to the scheme, the host and the port, while navigations on the same origin will include the referrer's path.\n  \"unsafe-url\" meaning that the referrer will include the origin and the path (but not the fragment, password, or username). This case is unsafe because it can leak origins and paths from TLS-protected resources to insecure origins.\n \n "
		},
		{
			"name": "scrolling",
			"description": "Enumerated attribute indicating when the browser should provide a scroll bar (or other scrolling device) for the frame:\n \n  auto: Only when needed.\n  yes: Always provide a scroll bar.\n  no: Never provide a scroll bar.\n \n "
		},
		{
			"name": "sandbox",
			"description": "If specified as an empty string, this attribute enables extra restrictions on the content that can appear in the inline frame. The value of the attribute can either be an empty string (all the restrictions are applied), or a space-separated list of tokens that lift particular restrictions. Valid tokens are:\n \n  allow-forms: Allows the embedded browsing context to submit forms. If this keyword is not used, this operation is not allowed.\n  allow-modals: Allows the embedded browsing context to open modal windows.\n  allow-orientation-lock: Allows the embedded browsing context to disable the ability to lock the screen orientation.\n  allow-pointer-lock: Allows the embedded browsing context to use the Pointer Lock API.\n  allow-popups: Allows popups (like from window.open, target=\"_blank\", showModalDialog). If this keyword is not used, that functionality will silently fail.\n  allow-popups-to-escape-sandbox:  Allows a sandboxed document to open new windows without forcing the sandboxing flags upon them. This will allow, for example, a third-party advertisement to be safely sandboxed without forcing the same restrictions upon a landing page.\n  allow-presentation: Allows embedders to have control over whether an iframe can start a presentation session.\n  allow-same-origin: Allows the content to be treated as being from its normal origin. If this keyword is not used, the embedded content is treated as being from a unique origin.\n  allow-scripts: Allows the embedded browsing context to run scripts (but not create pop-up windows). If this keyword is not used, this operation is not allowed.\n  allow-top-navigation: Allows the embedded browsing context to navigate (load) content to the top-level browsing context. If this keyword is not used, this operation is not allowed.\n  allow-top-navigation-by-user-activation: Allows the embedded browsing context to navigate (load) content to the top-level browsing context only when initiated by a user gesture. If this keyword is not used, this operation is not allowed.\n \n\n \n Note:\n\n \n  When the embedded document has the same origin as the main page, it is strongly discouraged to use both allow-scripts and allow-same-origin at the same time, as that allows the embedded document to programmatically remove the sandbox attribute. Although it is accepted, this case is no more secure than not using the sandbox attribute.\n  Sandboxing in general is only of minimal help if the attacker can arrange for the potentially hostile content to be displayed in the user's browser outside a sandboxed iframe. It is recommended that such content should be served from a separate dedicated domain, to limit the potential damage.\n  The sandbox attribute is not supported in Internet Explorer 9 and earlier versions.\n \n \n "
		},
		{
			"name": "src",
			"description": "The URL of the page to embed. Use 'about:blank' for empty pages that conform to Same-Origin Policy."
		},
		{
			"name": "srcdoc",
			"description": "The content of the page that the embedded context is to contain. This attribute is expected to generally be used together with the sandbox attribute. If a browser supports the srcdoc attribute, it will override the content specified in the src attribute (if present). If a browser does NOT support the srcdoc attribute, it will show the file specified in the src attribute instead (if present). Note that if the content of the attribute contains a script tag then a closing script tag is required for the script to run, even if nothing else comes after the script."
		},
		{
			"name": "width",
			"description": "Indicates the width of the frame HTML5 in CSS pixels, or HTML 4.01 in pixels or as a percentage."
		}
	],
	"categories": [
		"Flow",
		"phrasing",
		"embedded",
		"interactive",
		"palpable"
	],
	"content": "Special, see prose",
	"omission": "None, both the starting and ending tag are mandatory.",
	"parents": "Any element that accepts embedded content.",
	"roles": [
		"application",
		"document",
		"img"
	]
}