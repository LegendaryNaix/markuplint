{
	"tagName": "img",
	"citeFrom": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img",
	"attr": [
		"#global",
		{
			"name": "align",
			"description": "The alignment of the image with respect to its surrounding context. In HTML5, use the float and/or vertical-align CSS properties instead."
		},
		{
			"name": "alt",
			"description": "This attribute defines the alternative text describing the image. Users will see this text displayed if the image URL is wrong, the image is not in one of the supported formats, or if the image is not yet downloaded.\n \n Browsers do not always display the image referenced by the element. This is the case for non-graphical browsers (including those used by people with vision impairments), if the user chooses not to display images, or if the browser cannot display the image because it is invalid or an unsupported type. In these cases, the browser may replace the image with the text defined in this element's alt attribute. You should, for these reasons and others, provide a useful value for alt whenever possible.\n \n\n \n Omitting this attribute altogether indicates that the image is a key part of the content, and no textual equivalent is available. Setting this attribute to an empty string (alt=\"\") indicates that this image is not a key part of the content, and that non-visual browsers may omit it from rendering.\n \n "
		},
		{
			"name": "border",
			"description": "The width of a border around the image. In HTML5, use the border CSS property instead."
		},
		{
			"name": "crossorigin",
			"description": "This enumerated attribute indicates if the fetching of the related image must be done using CORS or not. CORS-enabled images can be reused in the <canvas> element without being \"tainted.\" The allowed values are:"
		},
		{
			"name": "anonymous",
			"description": "A cross-origin request (i.e., with Origin: HTTP header) is performed. But no credential is sent (i.e., no cookie, no X.509 certificate, and no HTTP Basic authentication is sent). If the server does not give credentials to the origin site (by not setting the Access-Control-Allow-Origin: HTTP header), the image will be tainted and its usage restricted."
		},
		{
			"name": "use-credentials",
			"description": "A cross-origin request (i.e., with Origin: HTTP header) performed with credential is sent (i.e., a cookie, a certificate, and HTTP Basic authentication is performed). If the server does not give credentials to the origin site (through Access-Control-Allow-Credentials: HTTP header), the image will be tainted and its usage restricted."
		},
		{
			"name": "height",
			"description": "The intrinsic height of the image in pixels. In HTML 4, the height could be defined pixels or as a percentage. In HTML5, however, the value must be in pixels."
		},
		{
			"name": "hspace",
			"description": "The number of pixels of white space to insert to the left and right of the image. In HTML5, use the margin CSS property instead."
		},
		{
			"name": "ismap",
			"description": "This Boolean attribute indicates that the image is part of a server-side map. If so, the precise coordinates of a click are sent to the server.\n \n This attribute is allowed only if the <img> element is a descendant of an <a> element with a valid href attribute.\n \n "
		},
		{
			"name": "longdesc",
			"description": "A link to a more detailed description of the image. Possible values are a URL or an element id."
		},
		{
			"name": "name",
			"description": "A name for the element. It is supported in HTML 4 only for backward compatibility. Use the id attribute instead."
		},
		{
			"name": "referrerpolicy",
			"description": "A string indicating which referrer to use when fetching the resource:\n \n  no-referrer: the Referer header will not be sent.\n  no-referrer-when-downgrade: no Referer header will be sent when navigating to an origin without TLS (HTTPS). This is a user agent’s default behavior if no policy is otherwise specified.\n  origin: the Referer header will include the page of origin's scheme, the host and the port.\n  origin-when-cross-origin: navigating to other origins will limit the included referral data to the scheme, the host and the port, while navigating from the same origin will include the referrer's full path.\n  unsafe-url: the Referer header will include the origin and the path, but not the fragment, password or username. This case is unsafe because it can leak origins and paths from TLS-protected resources to insecure origins.\n \n "
		},
		{
			"name": "sizes",
			"description": "A list of one or more strings separated by commas indicating a set of source sizes. Each source size consists of:\n \n  a media condition. This must be omitted for the last item.\n  a source size value.\n \n\n Source size values specify the intended display size of the image. User agents use the current source size to select one of the sources supplied by the srcset attribute, when those sources are described using width ('w') descriptors. The selected source size affects the intrinsic size of the image (the image’s display size if no CSS styling is applied). If the srcset attribute is absent, or contains no values with a width (w) descriptor, then the sizes attribute has no effect.\n "
		},
		{
			"name": "src",
			"description": "The image URL. This attribute is mandatory for the <img> element. On browsers supporting srcset, src is treated like a candidate image with a pixel density descriptor 1x unless an image with this pixel density descriptor is already defined in srcset, or unless srcset contains 'w' descriptors."
		},
		{
			"name": "srcset",
			"description": "A list of one or more strings separated by commas indicating a set of possible image sources for the user agent to use. Each string is composed of:\n \n  a URL to an image,\n  optionally, whitespace followed by one of:\n   \n    a width descriptor, or a positive integer directly followed by 'w'. The width descriptor is divided by the source size given in the sizes attribute to calculate the effective pixel density.\n    a pixel density descriptor, which is a positive floating point number directly followed by 'x'.\n   \n  \n \n\n If no descriptor is specified, the source is assigned the default descriptor: 1x.\n\n It is incorrect to mix width descriptors and pixel density descriptors in the same srcset attribute. Duplicate descriptors (for instance, two sources in the same srcset which are both described with '2x') are invalid, too.\n\n The user agent selects any one of the available sources at its discretion. This provides them with significant leeway to tailor their selection based on things like user preferences or bandwidth conditions.\n "
		},
		{
			"name": "width",
			"description": "The intrinsic width of the image in pixels. In HTML 4, either a percentage or pixels were acceptable values. In HTML5, however, only pixels are acceptable."
		},
		{
			"name": "usemap",
			"description": "The partial URL (starting with '#') of an image map associated with the element.\n \n Usage note: You cannot use this attribute if the <img> element is a descendant of an <a> or <button> element.\n \n "
		},
		{
			"name": "vspace",
			"description": "The number of pixels of white space to insert above and below the image. In HTML5, use the margin CSS property instead."
		}
	],
	"categories": [
		"Flow",
		"phrasing",
		"embedded",
		"palpable",
		"interactive"
	],
	"content": "None, it is an empty element.",
	"omission": "Must have a start tag and must not have an end tag.",
	"parents": "Any element that accepts embedded content.",
	"roles": [
		"Any"
	]
}